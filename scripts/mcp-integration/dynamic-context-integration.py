#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Dynamic Context Integration Script v1.0
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Dynamic Context Engine —Å CLAUDE.md

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç CLAUDE.md –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª
–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
"""

import json
import re
import sys
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

try:
    from dynamic_context_engine import DynamicContextEngine
except ImportError:
    print("‚ö†Ô∏è –ú–æ–¥—É–ª—å dynamic_context_engine –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –±–∞–∑–æ–≤—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é")

def integrate_dynamic_context_with_claude_md():
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Dynamic Context Engine —Å CLAUDE.md"""

    claude_md_path = Path("D:/1C-Enterprise_Framework/CLAUDE.md")
    backup_path = Path("D:/1C-Enterprise_Framework/CLAUDE.md.backup")

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    if claude_md_path.exists():
        with open(claude_md_path, 'r', encoding='utf-8') as f:
            content = f.read()

        with open(backup_path, 'w', encoding='utf-8') as f:
            f.write(content)

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    else:
        print("‚ùå CLAUDE.md –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –ü–æ–∏—Å–∫ —Å–µ–∫—Ü–∏–∏ Tool usage policy
    tool_policy_pattern = r'(# Tool usage policy.*?)(?=\n# |$)'

    # –ù–æ–≤–∞—è —Å–µ–∫—Ü–∏—è —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Dynamic Context Engine
    new_tool_policy = """# Tool usage policy

## ü§ñ Dynamic Context Engine - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

**–í–ê–ñ–ù–û:** –§—Ä–µ–π–º–≤–æ—Ä–∫ –æ—Å–Ω–∞—â–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.

### üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ Dynamic Context Engine

```python
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
python scripts/mcp-integration/dynamic-context-engine.py --analyze "–ù–∞–π–¥–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–æ–¥—É–ª–µ ObjectModule.bsl"

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
python scripts/mcp-integration/dynamic-context-integration.py --interactive
```

### ‚ö° –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –≤—ã–±–æ—Ä–∞

**–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Üí MCP —Å–µ—Ä–≤–µ—Ä—ã**
**–¢–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Üí –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã**

### üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê –¥–ª—è BSL —Ñ–∞–π–ª–æ–≤

**–í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π `mcp__ast-grep-mcp__ast_grep` –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã BSL —Ñ–∞–π–ª–æ–≤**

```javascript
// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã BSL –º–æ–¥—É–ª—è
mcp__ast-grep-mcp__ast_grep({
  pattern: "–§—É–Ω–∫—Ü–∏—è $NAME($$$ARGS)",
  path: "src/DataProcessors/Module/Ext/ObjectModule.bsl",
  bsl_type: "functions"
})
```

### üìä –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É –∑–∞–¥–∞—á–∏

| –ó–∞–¥–∞—á–∞ | –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å | –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç | –í—Ä–µ–º—è |
|--------|-------------|-------------|--------|
| **–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã BSL** | 90% | `mcp__ast-grep-mcp__ast_grep` | 5-15 —Å–µ–∫ |
| **–ü–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ BSL** | 85% | `mcp__ast-grep-mcp__ast_grep` | 5-20 —Å–µ–∫ |
| **–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π** | 80% | `mcp__serena__find_referencing_symbols` | 15-45 —Å–µ–∫ |
| **–ü–æ–∏—Å–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏** | 75% | `mcp__1c-framework-docs__search_docs` | 10-30 —Å–µ–∫ |
| **–ü–∞—Ä—Å–∏–Ω–≥ –≤–µ–±-—Å–∞–π—Ç–æ–≤** | 95% | `mcp__universal-web-scraper__scrape_website` | 30 —Å–µ–∫ - 3 –º–∏–Ω |
| **–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤** | 90% | `mcp__docling__convert_document` | 30 —Å–µ–∫ - 5 –º–∏–Ω |
| **–°–ª–æ–∂–Ω—ã–π –∞–Ω–∞–ª–∏–∑** | 70% | `mcp__sequential-thinking__sequentialthinking` | 2-10 –º–∏–Ω |

### üß† Self-Learning —Å–∏—Å—Ç–µ–º–∞

Engine –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—É—á–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ:
- –£—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –ß–∞—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
- –ö–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á –∏ –∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
- –í—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

### üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ

**–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** `.claude/dynamic-context-config.json`
**–ö—ç—à —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:** `cache/context-engine/`
**–î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è:** `cache/context-engine/learning_data.json`

### üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Å–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏

```json
{
  "weights": {
    "file_type_match": 0.4,      // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    "semantic_match": 0.3,       // –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    "complexity_match": 0.2,     // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    "learning_bonus": 0.1        // –ë–æ–Ω—É—Å –æ—Ç –æ–±—É—á–µ–Ω–∏—è
  }
}
```

### üìã –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞

#### –ó–∞–ø—Ä–æ—Å: "–ù–∞–π–¥–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–æ–¥—É–ª–µ ObjectModule.bsl"
**–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:**
- –¢–∏–ø —Ñ–∞–π–ª–∞: BSL ‚úÖ
- –ù–∞–º–µ—Ä–µ–Ω–∏–µ: search ‚úÖ
- –°–ª–æ–∂–Ω–æ—Å—Ç—å: simple ‚úÖ
- –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: 1c ‚úÖ

**–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**
```javascript
// –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 90% - –í—ã—Å–æ–∫–∞—è
mcp__ast-grep-mcp__ast_grep({
  pattern: "–§—É–Ω–∫—Ü–∏—è $NAME($$$ARGS)",
  bsl_type: "functions",
  path: "src/module.bsl"
})
```

#### –ó–∞–ø—Ä–æ—Å: "–ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –ó–∞–ø–æ–ª–Ω–∏—Ç—å–°–ø–∏—Å–æ–∫?"
**–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**
```javascript
// –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 85% - –í—ã—Å–æ–∫–∞—è
mcp__serena__find_referencing_symbols({
  name_path: "–ó–∞–ø–æ–ª–Ω–∏—Ç—å–°–ø–∏—Å–æ–∫",
  relative_path: "Module.bsl"
})
```

#### –ó–∞–ø—Ä–æ—Å: "–ü–∞—Ä—Å–∏–Ω–≥ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Å —Å–∞–π—Ç–∞ its.1c.ru"
**–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**
```javascript
// –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 95% - –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è
mcp__universal-web-scraper__scrape_website({
  url: "https://its.1c.ru/db/metod8dev",
  adapter_type: "its_1c",
  save_to_memory: true
})
```

### üéØ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏

Dynamic Context Engine –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ [MCP Priority Rules](.claude/mcp-priority-rules.md) –∏ —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- ‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è
- ‚úÖ Self-learning –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- ‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- ‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –º–µ—Ç—Ä–∏–∫–∏

---

**–í–µ—Ä—Å–∏—è Dynamic Context Engine:** 1.0
**–î–∞—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:** """ + datetime.now().strftime('%Y-%m-%d') + """
**–°—Ç–∞—Ç—É—Å:** ‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é

---"""

    # –ó–∞–º–µ–Ω–∞ —Å–µ–∫—Ü–∏–∏ Tool usage policy
    if re.search(tool_policy_pattern, content, re.DOTALL):
        new_content = re.sub(tool_policy_pattern, new_tool_policy, content, flags=re.DOTALL)
        print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–µ–∫—Ü–∏—è 'Tool usage policy'")
    else:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ–∫—Ü–∏–∏ –ø–æ—Å–ª–µ Repository Overview
        repo_overview_pattern = r'(## üèóÔ∏è Repository Overview.*?)(?=\n## |$)'
        if re.search(repo_overview_pattern, content, re.DOTALL):
            new_content = re.sub(repo_overview_pattern, r'\1\n\n' + new_tool_policy, content, flags=re.DOTALL)
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Å–µ–∫—Ü–∏—è 'Tool usage policy' –ø–æ—Å–ª–µ Repository Overview")
        else:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
            new_content = content + "\n\n" + new_tool_policy
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Å–µ–∫—Ü–∏—è –≤ –∫–æ–Ω–µ—Ü CLAUDE.md")

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    with open(claude_md_path, 'w', encoding='utf-8') as f:
        f.write(new_content)

    print(f"‚úÖ CLAUDE.md —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Dynamic Context Engine")

    return True

def create_quick_start_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""

    script_content = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Quick Start Script for Dynamic Context Engine
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
"""

import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

from dynamic_context_engine import DynamicContextEngine, TaskContext

def quick_analyze(user_request, file_paths=None):
    """–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞"""

    print(f"ü§ñ Dynamic Context Engine v1.0")
    print(f"üìù –ó–∞–ø—Ä–æ—Å: {user_request}")
    print(f"üìÅ –§–∞–π–ª—ã: {file_paths if file_paths else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}")
    print("-" * 60)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–∫–∞
    engine = DynamicContextEngine()

    # –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    context = engine.analyze_request(user_request, file_paths or [])

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    recommendations = engine.recommend_tools(context)

    print(f"üéØ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:")
    print(f"   –¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤: {[ft.value for ft in context.file_types]}")
    print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {context.complexity.value}")
    print(f"   –ù–∞–º–µ—Ä–µ–Ω–∏–µ: {context.intent}")
    print(f"   –û–±–ª–∞—Å—Ç—å: {context.domain}")
    print()

    print(f"üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:")

    if not recommendations:
        print("   ‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    for i, rec in enumerate(recommendations[:3], 1):
        confidence_emoji = "üü¢" if rec.confidence >= 0.8 else "üü°" if rec.confidence >= 0.6 else "üî¥"
        print(f"   {i}. {confidence_emoji} {rec.tool_name}")
        print(f"      –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {rec.confidence:.2f}")
        print(f"      –í—Ä–µ–º—è: {rec.estimated_time}")
        print(f"      –ü—Ä–∏—á–∏–Ω–∞: {rec.reason}")
        print()

    # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ç–æ–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    top_rec = recommendations[0]
    print(f"üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞:")
    print(f"```javascript")
    print(f"{top_rec.tool_name}({{")
    for key, value in top_rec.parameters.items():
        if isinstance(value, str):
            print(f'  {key}: "{value}",')
        else:
            print(f'  {key}: {json.dumps(value)},')
    print(f"}})")
    print(f"```")

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Dynamic Context Engine Quick Start")
    parser.add_argument("request", help="–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    parser.add_argument("--files", nargs="*", help="–ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º")

    args = parser.parse_args()

    quick_analyze(args.request, args.files)
'''

    script_path = Path("D:/1C-Enterprise_Framework/scripts/mcp-integration/quick-context-analyze.py")
    with open(script_path, 'w', encoding='utf-8') as f:
        f.write(script_content)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: {script_path}")

    return script_path

def create_integration_documentation():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""

    doc_content = '''# Dynamic Context Engine Integration Guide

## üéØ –û–±–∑–æ—Ä

Dynamic Context Engine - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ 1C-Enterprise, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞
```bash
python scripts/mcp-integration/quick-context-analyze.py "–ù–∞–π–¥–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–æ–¥—É–ª–µ ObjectModule.bsl" --files "src/module.bsl"
```

### 2. –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –æ—Ç—á–µ—Ç–æ–º
```python
from dynamic_context_engine import DynamicContextEngine

engine = DynamicContextEngine()
context = engine.analyze_request("–ù–∞–π–¥–∏ —Ñ—É–Ω–∫—Ü–∏–∏", ["file.bsl"])
recommendations = engine.recommend_tools(context)
report = engine.generate_recommendation_report(context, recommendations)
```

## üß† –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã

1. **TaskContext** - –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ —Å –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–ø—Ä–æ—Å–∞
2. **ToolRecommendation** - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
3. **DynamicContextEngine** - –æ—Å–Ω–æ–≤–Ω–æ–π –¥–≤–∏–∂–æ–∫ –∞–Ω–∞–ª–∏–∑–∞
4. **Learning System** - —Å–∏—Å—Ç–µ–º–∞ —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è

### –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã

```mermaid
graph TD
    A[–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] --> B[–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞]
    B --> C[–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤]
    B --> D[–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤]
    B --> E[–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏]
    B --> F[–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏—è]

    C --> G[–†–∞—Å—á–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏]
    D --> G
    E --> G
    F --> G

    G --> H[–†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤]
    H --> I[–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π]
    I --> J[–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è]
```

## üìä –°–∏—Å—Ç–µ–º–∞ –≤–µ—Å–æ–≤ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏

### –í–µ—Å–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
```json
{
  "file_type_match": 0.4,      // 40% - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
  "semantic_match": 0.3,       // 30% - —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  "complexity_match": 0.2,     // 20% - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  "learning_bonus": 0.1        // 10% - –±–æ–Ω—É—Å –æ—Ç –æ–±—É—á–µ–Ω–∏—è
}
```

### –ü–æ—Ä–æ–≥–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
- **–í—ã—Å–æ–∫–∞—è (>= 0.8)**: –ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
- **–°—Ä–µ–¥–Ω—è—è (>= 0.6)**: –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é
- **–ù–∏–∑–∫–∞—è (>= 0.4)**: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç

## üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
**–ü—É—Ç—å:** `.claude/dynamic-context-config.json`

```json
{
  "version": "1.0",
  "weights": { /* –≤–µ—Å–∞ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ */ },
  "confidence_thresholds": { /* –ø–æ—Ä–æ–≥–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ */ },
  "tool_availability": { /* –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */ },
  "bsl_specific": {
    "mandatory_ast_grep": true,
    "ast_grep_confidence_boost": 0.3
  }
}
```

### –ü–∞—Ç—Ç–µ—Ä–Ω—ã –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

Engine –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–¥–∞—á:

- **bsl_structure_analysis** - –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã BSL
- **bsl_function_search** - –ø–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π/–ø—Ä–æ—Ü–µ–¥—É—Ä
- **dependency_analysis** - –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- **documentation_search** - –ø–æ–∏—Å–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- **web_scraping** - –ø–∞—Ä—Å–∏–Ω–≥ –≤–µ–±-—Å–∞–π—Ç–æ–≤
- **document_conversion** - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

## üìà Self-Learning —Å–∏—Å—Ç–µ–º–∞

### –ú–µ—Ö–∞–Ω–∏–∑–º –æ–±—É—á–µ–Ω–∏—è

1. **–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö** - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
2. **–ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
3. **–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –≤–µ—Å–æ–≤** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
4. **–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ** - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞–Ω–∏–π –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏

### –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è
- `cache/context-engine/learning_data.json` - –∏—Å—Ç–æ—Ä–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- `cache/context-engine/test_report_*.md` - –æ—Ç—á–µ—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

## üéØ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã

### –ü—Ä–∏–º–µ—Ä 1: –ê–Ω–∞–ª–∏–∑ BSL –º–æ–¥—É–ª—è
```python
# –ó–∞–ø—Ä–æ—Å: "–ü–æ–∫–∞–∂–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–æ–¥—É–ª—è ObjectModule.bsl"
# –†–µ–∑—É–ª—å—Ç–∞—Ç: mcp__ast-grep-mcp__ast_grep (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 0.90)

mcp__ast-grep-mcp__ast_grep({
  "pattern": "–§—É–Ω–∫—Ü–∏—è $NAME($$$ARGS)",
  "bsl_type": "functions",
  "path": "src/ObjectModule.bsl"
})
```

### –ü—Ä–∏–º–µ—Ä 2: –ü–æ–∏—Å–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```python
# –ó–∞–ø—Ä–æ—Å: "–ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –ó–∞–ø–æ–ª–Ω–∏—Ç—å–°–ø–∏—Å–æ–∫?"
# –†–µ–∑—É–ª—å—Ç–∞—Ç: mcp__serena__find_referencing_symbols (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 0.85)

mcp__serena__find_referencing_symbols({
  "name_path": "–ó–∞–ø–æ–ª–Ω–∏—Ç—å–°–ø–∏—Å–æ–∫",
  "relative_path": "Module.bsl"
})
```

### –ü—Ä–∏–º–µ—Ä 3: –ü–∞—Ä—Å–∏–Ω–≥ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
```python
# –ó–∞–ø—Ä–æ—Å: "–ü–∞—Ä—Å–∏–Ω–≥ —Å—Ç–∞—Ç—å–∏ —Å ITS 1C"
# –†–µ–∑—É–ª—å—Ç–∞—Ç: mcp__universal-web-scraper__scrape_website (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 0.95)

mcp__universal-web-scraper__scrape_website({
  "url": "https://its.1c.ru/article",
  "adapter_type": "its_1c",
  "save_to_memory": true
})
```

## üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏

### –°–≤—è–∑—å —Å MCP Priority Rules
Engine —Ä–∞—Å—à–∏—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ –∏–∑ `.claude/mcp-priority-rules.md`:
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
- –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ä—É—á–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CLAUDE.md
–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ `dynamic-context-integration.py` –≤ CLAUDE.md –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è:
- –°–µ–∫—Ü–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º Dynamic Context Engine
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–∏–ø–æ–≤—ã—Ö –∑–∞–¥–∞—á
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

## üìã –ú–µ—Ç—Ä–∏–∫–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
- **–¢–æ—á–Ω–æ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π** - –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
- **–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞** - —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
- **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è MCP
- **–û–±—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã** - –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–ª–≥–æ—Ä–∏—Ç–º–∞

### –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
```python
import logging
logging.basicConfig(level=logging.INFO)
```

## üöÄ –†–∞–∑–≤–∏—Ç–∏–µ –∏ —É–ª—É—á—à–µ–Ω–∏—è

### –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (v1.1)
- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ LLM –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
- [ ] –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
- [ ] –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- [ ] API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏

### –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
- –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–º–µ–Ω–Ω–æ-—Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
- –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã

## üîß –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã

1. **–ù–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π**
   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –∑–∞–ø—Ä–æ—Å–µ
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—Å–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á

2. **–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π**
   - –£–±–µ–¥–∏—Ç—å—Å—è –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
   - –î–æ–±–∞–≤–∏—Ç—å fallback –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã

3. **–ú–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞**
   - –í–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
   - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
   - –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤

### –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
```bash
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
PYTHONIOENCODING=utf-8 python scripts/mcp-integration/dynamic-context-engine.py --debug

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
python -c "
from dynamic_context_engine import DynamicContextEngine
engine = DynamicContextEngine()
print('Config loaded:', engine.config['version'])
"
```

---

**–í–µ—Ä—Å–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:** 1.0
**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** ''' + datetime.now().strftime('%Y-%m-%d') + '''
**–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** D:/1C-Enterprise_Framework/scripts/mcp-integration/
'''

    doc_path = Path("D:/1C-Enterprise_Framework/docs/dynamic-context-engine.md")
    doc_path.parent.mkdir(parents=True, exist_ok=True)

    with open(doc_path, 'w', encoding='utf-8') as f:
        f.write(doc_content)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {doc_path}")

    return doc_path

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Dynamic Context Engine —Å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º")
    print("=" * 60)

    # 1. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CLAUDE.md
    print("1Ô∏è‚É£ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CLAUDE.md...")
    if integrate_dynamic_context_with_claude_md():
        print("   ‚úÖ CLAUDE.md —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
    else:
        print("   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è CLAUDE.md")
        return False

    # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞...")
    quick_script = create_quick_start_script()
    print(f"   ‚úÖ –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: {quick_script}")

    # 3. –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
    doc_path = create_integration_documentation()
    print(f"   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: {doc_path}")

    # 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")

    required_files = [
        "D:/1C-Enterprise_Framework/scripts/mcp-integration/dynamic-context-engine.py",
        "D:/1C-Enterprise_Framework/.claude/dynamic-context-config.json",
        "D:/1C-Enterprise_Framework/scripts/mcp-integration/quick-context-analyze.py",
        "D:/1C-Enterprise_Framework/docs/dynamic-context-engine.md"
    ]

    all_files_exist = True
    for file_path in required_files:
        if Path(file_path).exists():
            print(f"   ‚úÖ {Path(file_path).name}")
        else:
            print(f"   ‚ùå {Path(file_path).name} - –ù–ï –ù–ê–ô–î–ï–ù")
            all_files_exist = False

    print("\n" + "=" * 60)
    if all_files_exist:
        print("üéâ Dynamic Context Engine —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω!")
        print("\nüìã –ß—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ:")
        print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("   ‚Ä¢ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
        print("   ‚Ä¢ Self-learning —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ MCP Priority Rules")
        print("   ‚Ä¢ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")

        print("\nüöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:")
        print("   python scripts/mcp-integration/quick-context-analyze.py \"–ù–∞–π–¥–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–æ–¥—É–ª–µ\"")
        print("   python scripts/mcp-integration/dynamic-context-engine.py")

        print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
        print("   docs/dynamic-context-engine.md")
        print("   .claude/mcp-priority-rules.md")

        return True
    else:
        print("‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        return False

if __name__ == "__main__":
    main()