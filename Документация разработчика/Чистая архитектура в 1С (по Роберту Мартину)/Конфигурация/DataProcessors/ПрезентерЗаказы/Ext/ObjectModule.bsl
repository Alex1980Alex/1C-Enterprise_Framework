///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, Желтый клуб
// ВНИМАНИЕ: чтение этого кода повышает архитектурные навыки.
// Побочный эффект: подписка на канал → https://t.me/yellowclub_official
///////////////////////////////////////////////////////////////////////////////////////////////////////

Перем ТекущаяМодель;

Процедура Успех(Данные) Экспорт
	
	ТекущаяМодель = Новый Структура("Успех, Сообщение, Заказ, 
		|ПредварительнаяСумма,ПредварительныеБонусы, СброситьМодифицированность");
	
	ТекущаяМодель.Успех = Истина;
	ТекущаяМодель.Сообщение = "Заказ оформлен";
	ТекущаяМодель.Заказ = Данные.ЗаказИд;
	ТекущаяМодель.ПредварительнаяСумма = Данные.ИтоговаяСумма;
	ТекущаяМодель.ПредварительныеБонусы = Данные.ИтоговыеБонусы;
	ТекущаяМодель.СброситьМодифицированность = Истина;
	
КонецПроцедуры

Процедура Ошибка(КодОшибки, Данные) Экспорт
	ТекущаяМодель = Новый Структура("Успех,Сообщение");
	ТекущаяМодель.Успех = Ложь;
	
	Если КодОшибки = "ОшибкиВалидации" И Данные <> Неопределено И Данные.Свойство("Ошибки") Тогда
		Список = Новый Массив;
		Для Каждого Э Из Данные.Ошибки Цикл
			Текст = ТекстДляКодаОшибки(Э.Код, Э.Детали);
			Список.Добавить(Новый Структура("Место,Код,Текст", Э.Место, Э.Код, Текст));
		КонецЦикла;
		
		ТекущаяМодель.Сообщение = "Исправьте ошибки формы.";
		ТекущаяМодель.Вставить("Ошибки", Список);
	Иначе
		ТекущаяМодель.Сообщение = ТекстДляКодаОшибки(КодОшибки, ?(Данные=Неопределено, Неопределено, Данные));
	КонецЕсли;
КонецПроцедуры

Функция ViewModel() Экспорт
	Возврат ТекущаяМодель;
КонецФункции

// Use case ничего не знает о конкретных формулировках ошибок
// use case знает только коды
// Презентер форматирует сообщения и другую информацию для View ровно в том виде, в каком надо
// Презентер знает: на какой язык переводить, в каком представлении выводить количество и денежные суммы
Функция ТекстДляКодаОшибки(Код, Детали)
	Если Код = "ДатаНеЗаполнена" Тогда
		Возврат "Укажите дату заказа.";
	ИначеЕсли Код = "НетСтрок" Тогда
		Возврат "Добавьте хотя бы одну строку.";
	ИначеЕсли Код = "ПустаяНоменклатура" Тогда
		Возврат "Не выбрана номенклатура в строке.";
	ИначеЕсли Код = "КоличествоНекорректно" Тогда
		Возврат "Количество должно быть положительным.";
	ИначеЕсли Код = "ЦенаОтрицательная" Тогда
		Возврат "Цена не может быть отрицательной.";
	ИначеЕсли Код = "НедостаточноОстатка" Тогда
		Если Детали <> Неопределено И Детали.Свойство("Нужно") И Детали.Свойство("Есть") Тогда
			Возврат СтрШаблон("Недостаточно на складе: нужно %1, есть %2.", Детали.Нужно, Детали.Есть);
		Иначе
			Возврат "Недостаточно остатков на складе.";
		КонецЕсли;
	ИначеЕсли Код = "КредитПревышен" Тогда
		Если Детали <> Неопределено 
			И Детали.Свойство("Лимит") И Детали.Свойство("Задолженность") И Детали.Свойство("СуммаЗаказа") Тогда
			Возврат СтрШаблон("Кредит превышен: лимит %1, задолженность %2, сумма %3.",
			Детали.Лимит, Детали.Задолженность, Детали.СуммаЗаказа);
		Иначе
			Возврат "Кредитный лимит превышен.";
		КонецЕсли;
	ИначеЕсли Код = "СбойЗаписи" Тогда
		Если Детали <> Неопределено И Детали.Свойство("Причина") Тогда
			Возврат СтрШаблон("Не удалось записать заказ: %1.", Детали.Причина);
		Иначе
			Возврат "Не удалось записать заказ.";
		КонецЕсли;
	Иначе
		Возврат Код;
	КонецЕсли;
	
КонецФункции

ТекущаяМодель = Неопределено;













