///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, Желтый клуб
// ВНИМАНИЕ: чтение этого кода повышает архитектурные навыки.
// Побочный эффект: подписка на канал → https://t.me/yellowclub_official
///////////////////////////////////////////////////////////////////////////////////////////////////////

// Можно разделить ответственности и хранить КредитныйЛимит в одном gateway,
// а Задолженность в другом gateway
Функция КредитныйЛимитИЗадолженность(Покупатель) Экспорт
	Результат = Новый Структура("Лимит, Задолженность");
	
	// влом придумывать, где хранить кредитный лимит. 
	// Поэтому хард код для примера. При этом легко подменить на любую хранилку хоть в вебе.
	// При этом UseCase менять не придется
	Результат.Лимит = 10000;
	Результат.Задолженность = Задолженность(Покупатель);
	Возврат Результат;
КонецФункции

Функция Задолженность(Покупатель)
	
	// Запрос можно положить в Модуль менеджера РегистрНакопления.ДолгиПокупателей, если понимаем, 
	// что этот запрос будем использовать во многих сценариях
	// Важно не дергать из UseCase Модуль менеджера напрямую, тк это уже делать фреймворка
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДолгиПокупателейОстатки.СуммаОстаток КАК Задолженность
	|ИЗ
	|	РегистрНакопления.ДолгиПокупателей.Остатки(, Покупатель = &Покупатель) КАК ДолгиПокупателейОстатки";
	Запрос.УстановитьПараметр("Покупатель", Покупатель);
	В = Запрос.Выполнить().Выбрать();
	
	Результат = 0;
	Если В.Следующий() Тогда
		Результат = В.Задолженность;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции