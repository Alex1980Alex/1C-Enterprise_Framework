// ==========================================================================
// Модуль: ПримерМодуля
// Описание: Пример общего модуля для демонстрации возможностей фреймворка
// ==========================================================================

#Область ПрограммныйИнтерфейс

// Инициализирует систему при запуске
//
// Параметры:
//  Параметры - Структура - параметры инициализации
//
Процедура ИнициализироватьСистему(Параметры = Неопределено) Экспорт
    
    Если Параметры = Неопределено Тогда
        Параметры = НовыеПараметрыИнициализации();
    КонецЕсли;
    
    // Проверка обязательных параметров
    ПроверитьПараметры(Параметры);
    
    // Инициализация подсистем
    ИнициализироватьПодсистемы(Параметры);
    
    // Запись в журнал
    ЗаписатьВЖурнал("Система инициализирована успешно");
    
КонецПроцедуры

// Возвращает версию фреймворка
//
// Возвращаемое значение:
//  Строка - версия в формате "Major.Minor.Patch"
//
Функция ПолучитьВерсию() Экспорт
    Возврат "1.0.0";
КонецФункции

// Выполняет операцию с данными
//
// Параметры:
//  ТипОперации - Строка - тип выполняемой операции
//  Данные - Произвольный - данные для обработки
//
// Возвращаемое значение:
//  Структура - результат операции
//
Функция ВыполнитьОперацию(ТипОперации, Данные) Экспорт
    
    Результат = Новый Структура;
    Результат.Вставить("Успешно", Ложь);
    Результат.Вставить("ОписаниеОшибки", "");
    Результат.Вставить("Данные", Неопределено);
    
    Попытка
        
        Если ТипОперации = "Создание" Тогда
            Результат.Данные = СоздатьОбъект(Данные);
        ИначеЕсли ТипОперации = "Изменение" Тогда
            Результат.Данные = ИзменитьОбъект(Данные);
        ИначеЕсли ТипОперации = "Удаление" Тогда
            УдалитьОбъект(Данные);
        Иначе
            ВызватьИсключение "Неизвестный тип операции: " + ТипОперации;
        КонецЕсли;
        
        Результат.Успешно = Истина;
        
    Исключение
        Результат.ОписаниеОшибки = ОписаниеОшибки();
        ЗаписатьВЖурнал("Ошибка операции: " + Результат.ОписаниеОшибки, УровеньЖурнала.Ошибка);
    КонецПопытки;
    
    Возврат Результат;
    
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает новую структуру параметров инициализации
//
Функция НовыеПараметрыИнициализации()
    
    Параметры = Новый Структура;
    Параметры.Вставить("ИмяБазы", "");
    Параметры.Вставить("Пользователь", "");
    Параметры.Вставить("РежимОтладки", Ложь);
    Параметры.Вставить("УровеньЖурнала", УровеньЖурнала.Информация);
    
    Возврат Параметры;
    
КонецФункции

// Проверяет корректность параметров
//
Процедура ПроверитьПараметры(Параметры)
    
    Если ПустаяСтрока(Параметры.ИмяБазы) Тогда
        ВызватьИсключение "Не указано имя базы данных";
    КонецЕсли;
    
    Если ПустаяСтрока(Параметры.Пользователь) Тогда
        ВызватьИсключение "Не указан пользователь";
    КонецЕсли;
    
КонецПроцедуры

// Инициализирует подсистемы
//
Процедура ИнициализироватьПодсистемы(Параметры)
    
    // Инициализация журналирования
    НастроитьЖурналирование(Параметры.УровеньЖурнала);
    
    // Инициализация кэша
    ИнициализироватьКэш();
    
    // Загрузка настроек
    ЗагрузитьНастройки(Параметры.ИмяБазы);
    
КонецПроцедуры

// Настраивает журналирование
//
Процедура НастроитьЖурналирование(УровеньЖурнала)
    // Здесь должна быть настройка журналирования
КонецПроцедуры

// Инициализирует кэш
//
Процедура ИнициализироватьКэш()
    // Здесь должна быть инициализация кэша
КонецПроцедуры

// Загружает настройки
//
Процедура ЗагрузитьНастройки(ИмяБазы)
    // Здесь должна быть загрузка настроек
КонецПроцедуры

// Создает новый объект
//
Функция СоздатьОбъект(Данные)
    // Реализация создания объекта
    Возврат Данные;
КонецФункции

// Изменяет существующий объект
//
Функция ИзменитьОбъект(Данные)
    // Реализация изменения объекта
    Возврат Данные;
КонецФункции

// Удаляет объект
//
Процедура УдалитьОбъект(Данные)
    // Реализация удаления объекта
КонецПроцедуры

// Записывает сообщение в журнал
//
Процедура ЗаписатьВЖурнал(Сообщение, Уровень = Неопределено)
    
    Если Уровень = Неопределено Тогда
        Уровень = УровеньЖурнала.Информация;
    КонецЕсли;
    
    // Здесь должна быть запись в журнал
    // Для примера просто выводим в консоль
    Сообщить(Строка(Уровень) + ": " + Сообщение);
    
КонецПроцедуры

#КонецОбласти

#Область УровниЖурнала

// Перечисление уровней журнала (эмуляция)
Перем УровеньЖурнала Экспорт;

Процедура ИнициализироватьУровниЖурнала()
    УровеньЖурнала = Новый Структура;
    УровеньЖурнала.Вставить("Отладка", "ОТЛАДКА");
    УровеньЖурнала.Вставить("Информация", "ИНФОРМАЦИЯ");
    УровеньЖурнала.Вставить("Предупреждение", "ПРЕДУПРЕЖДЕНИЕ");
    УровеньЖурнала.Вставить("Ошибка", "ОШИБКА");
КонецПроцедуры

ИнициализироватьУровниЖурнала();

#КонецОбласти