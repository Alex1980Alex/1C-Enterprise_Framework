{
  "permissions": {
    "allow": [
      "mcp__serena__write_memory",
      "mcp__serena__list_dir",
      "Bash(dir:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__read_file",
      "mcp__serena__activate_project",
      "mcp__serena__get_symbols_overview",
      "mcp__sequential-thinking__sequentialthinking",
      "WebFetch(domain:forum.infostart.ru)",
      "mcp__serena__find_file",
      "mcp__brave-search__brave_web_search",
      "WebFetch(domain:infostart.ru)",
      "mcp__serena__replace_regex",
      "mcp__serena__insert_before_symbol",
      "mcp__github__search_code",
      "mcp__filesystem__list_directory",
      "Bash(ls:*)",
      "mcp__filesystem__search_files",
      "mcp__filesystem__read_text_file",
      "Bash(chmod:*)",
      "Bash(./scripts/setup-bsl-search.sh:*)",
      "Bash(source:*)",
      "Bash(bsl-help:*)",
      "Bash(find-procedures)",
      "Bash(python:*)",
      "Bash(uv run:*)",
      "Bash(ast-grep:*)",
      "Bash(npm install:*)",
      "Bash(tree-sitter:*)",
      "Bash(npm run build:*)",
      "Bash(where:*)",
      "Bash(powershell:*)",
      "Bash(scripts/check-compilers.bat)",
      "Bash(npm:*)",
      "Bash(bash:*)",
      "Bash(winget:*)",
      "Bash(scripts/simple-mingw-install.bat)",
      "Bash(curl:*)",
      "Read(///**)",
      "Read(//mingw64/bin/**)",
      "Bash(node:*)",
      "mcp__serena__read_memory",
      "Bash(chcp:*)",
      "Bash(set NODE_ENV=production)",
      "Bash(set STARTUP_DIR=%APPDATA%MicrosoftWindowsStart MenuProgramsStartup)",
      "Bash(cscript:*)",
      "Bash(del create_shortcut.vbs)",
      "Bash(start /min cmd /c:*)",
      "Bash(tasklist:*)",
      "Bash(reg import:*)",
      "Bash(reg query:*)",
      "Bash(findstr:*)",
      "mcp__filesystem__edit_file",
      "WebFetch(domain:ast-grep.github.io)",
      "mcp__ast-grep__ast_grep",
      "mcp__ast-grep-mcp__ast_grep",
      "mcp__filesystem__write_file",
      "Bash(PYTHONIOENCODING=utf-8 python test-ast-grep-mcp.py)",
      "mcp__filesystem__list_allowed_directories",
      "mcp__memory__read_graph",
      "mcp__github__search_repositories",
      "mcp__github__get_file_contents",
      "mcp__github__list_commits",
      "mcp__filesystem__directory_tree",
      "Bash(rm:*)",
      "mcp__filesystem__create_directory",
      "WebSearch",
      "Bash(java:*)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "mcp__serena__create_text_file",
      "Bash(bsl-quick-check.bat \"src\\projects\\configuration\\demo-accounting\\src\\Documents\\гкс_Взвешивание\\Ext\\ManagerModule.bsl\")",
      "Bash(cmd /c:*)",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__find_symbol",
      "mcp__serena__insert_after_symbol",
      "Bash(git checkout:*)",
      "Read(//d/**)",
      "Bash(scriptsbsl-quick-check.bat \"src\\projects\\configuration\\demo-accounting\\src\\Documents\\гкс_ФормированиеНомераПробы\\Ext\\ObjectModule.bsl\")",
      "Bash(scriptscheck-compilers.bat)",
      "WebFetch(domain:gist.github.com)",
      "Bash(claude mcp add:*)",
      "Read(//c/Users/AlexT/**)",
      "Read(//c//**)",
      "Bash(claude mcp:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(echo $USERPROFILE)",
      "Bash(echo $TEMP)",
      "Bash(sort:*)",
      "Bash(xargs ls:*)",
      "Bash(md5sum:*)",
      "Bash(scriptsbsl-quick-check.bat \"src\\projects\\configuration\\demo-accounting\\src\\Documents\\гкс_ФормированиеНомераПробы\\Ext\\ManagerModule.bsl\")",
      "Bash(git commit:*)",
      "Bash(npx:*)",
      "Bash(echo $APPDATA)",
      "Bash(claude config:*)",
      "Bash(cat:*)",
      "Bash(if [ ! -d \"D:/1C-Enterprise_Framework/cache\" ])",
      "Bash(then mkdir -p \"D:/1C-Enterprise_Framework/cache\")",
      "Bash(fi)",
      "mcp__memory__create_entities",
      "mcp__memory__create_relations",
      "Bash(if [ ! -d \"tests/playwright\" ])",
      "Bash(then mkdir -p \"tests/playwright\")",
      "Bash(if [ ! -d \"scripts/mcp-integration\" ])",
      "Bash(then mkdir -p \"scripts/mcp-integration\")",
      "WebFetch(domain:github.com)",
      "Bash(sonar-integration:*)",
      "WebFetch(domain:lobehub.com)",
      "Bash(mkdir:*)",
      "Bash(PYTHONIOENCODING=utf-8 python scripts/test-bsl-integration.py)",
      "Bash(scripts/bsl-quick-check.bat \"src\\projects\\configuration\\demo-accounting\\src\\Documents\\гкс_Взвешивание\\Ext\\ManagerModule.bsl\")",
      "Bash(PYTHONIOENCODING=utf-8 python scripts/monitoring/generate-dashboard.py --output \"reports/test-dashboard.html\" --metrics-dir \"cache/metrics\")",
      "Bash(scripts/open-dashboard.bat)",
      "Bash(copy:*)",
      "mcp__memory__search_nodes",
      "Bash(PYTHONIOENCODING=utf-8 python scripts/mcp-integration/auto-task-analyzer.py --task \"Add CLI JSON output and Cursor keybindings integration for Task Master #67\")",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js list --status=done --json)",
      "Bash(echo $PATH)",
      "Bash(ast-grep.cmd:*)",
      "Bash(cp:*)",
      "Bash(PYTHONIOENCODING=utf-8 python ../test-python-ast-grep.py)",
      "Bash(PYTHONIOENCODING=utf-8 python bsl_adapter.py)",
      "mcp__serena__get_current_config",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(pip install:*)",
      "Bash(PYTHONIOENCODING=utf-8 python -m sonar_integration analyze --src-dir \"src/projects/configuration/demo-accounting/src/Documents/гкс_ЛабораторныйАнализ/\" --quick)",
      "Bash(PYTHONIOENCODING=utf-8 python -m sonar_integration analyze --src-dir \"src/projects/configuration/demo-accounting/src/Documents/гкс_ЛабораторныйАнализ/\")",
      "Bash(PYTHONIOENCODING=utf-8 python -m sonar_integration rules)",
      "Bash(PYTHONIOENCODING=utf-8 python:*)",
      "Bash(sed:*)",
      "Bash(scriptsbsl-quick-check.bat \"src\\projects\\configuration\\250928_GKSTCPLK-1706\\src\\Documents\\гкс_ЛабораторныйАнализ\\Ext\\ManagerModule.bsl\")",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__list_memories",
      "mcp__serena__execute_shell_command",
      "mcp__filesystem__read_media_file",
      "mcp__filesystem__get_file_info",
      "WebFetch(domain:playbooks.com)",
      "WebFetch(domain:glama.ai)",
      "Bash(clip)",
      "Bash(timeout:*)",
      "Read(//tmp/**)",
      "Bash(set MCP_DEBUG=true)",
      "Bash(echo $env:APPDATA)",
      "mcp__clipboard__clipboard_get_image",
      "mcp__clipboard__clipboard_get_text",
      "Bash(docker:*)",
      "Bash(docs-mcp-server --version)",
      "Bash(set DOCS_PATH=D:1C-Enterprise_FrameworkДокументация по фреймворку)",
      "Bash(set ENABLE_SEMANTIC_CHUNKING=true)",
      "Bash(set CHUNK_SIZE=1000)",
      "Bash(set OVERLAP_SIZE=200)",
      "Bash(set ENABLE_CACHE=true)",
      "Bash(set CACHE_DIR=D:1C-Enterprise_Frameworkcachedocs-mcp)",
      "Bash(ollama:*)",
      "Bash(set DOCS_MCP_EMBEDDING_MODEL=text-embedding-3-small)",
      "Bash(del cachedocs-mcphybrid_search.db)",
      "mcp__1c-framework-docs__get_stats",
      "mcp__1c-framework-docs__reindex_docs",
      "mcp__playwright-automation__playwright_navigate",
      "mcp__playwright-automation__playwright_get_visible_html",
      "mcp__playwright-automation__playwright_fill",
      "mcp__playwright-automation__playwright_click",
      "mcp__playwright-automation__playwright_press_key",
      "mcp__playwright-automation__playwright_screenshot",
      "mcp__playwright-automation__playwright_get_visible_text",
      "mcp__playwright-automation__playwright_evaluate",
      "mcp__1c-framework-docs__search_docs",
      "Bash(git clone:*)",
      "mcp__clipboard__clipboard_set_text",
      "mcp__1c-framework-docs__get_document",
      "Bash(grep-mcp:*)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:docs.mcp-agent.com)",
      "WebFetch(domain:www.codiste.com)",
      "Bash(test:*)",
      "mcp__zip__echo",
      "mcp__markitdown-mcp__convert_to_markdown",
      "mcp__ripgrep__search",
      "mcp__ripgrep__list-files",
      "mcp__sqlite__list_tables",
      "mcp__sqlite__create_table",
      "mcp__sqlite__write_query",
      "mcp__sqlite__read_query",
      "mcp__zip__compress",
      "mcp__zip__getZipInfo",
      "mcp__zip__decompress",
      "mcp__playwright-automation__playwright_close",
      "mcp__sqlite__describe_table",
      "WebFetch(domain:its.1c.ru)",
      "WebFetch(domain:v8.1c.ru)",
      "mcp__memory__delete_entities",
      "mcp__memory__add_observations",
      "Bash(scripts/task-commands.sh:*)",
      "Bash(python3 scripts/persistent-tasks-api.py:*)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 npx task-master list --json --status=done)",
      "mcp__serena__think_about_task_adherence",
      "mcp__playwright-automation__playwright_get",
      "Bash(set BRAVE_API_KEY=BSAiTfUVVIGwCzgSqfI5xUcjQp5TkLy)",
      "Bash(claude --debug)",
      "Bash(uv:*)",
      "Bash(set MCP_TIMEOUT=120000)",
      "WebFetch(domain:qiita.com)",
      "Bash(scripts/serena-optimized-startup.bat)",
      "Bash(claude --version)",
      "Bash(C:UsersAlexTAppDataLocalProgramsPythonPython313Scriptsuv.exe run --directory D:/1C-Enterprise_Framework/serena serena-mcp-server --context desktop-app --project D:/1C-Enterprise_Framework)",
      "Bash(claude --print)",
      "Bash(C:UsersAlexTAppDataLocalProgramsPythonPython313Scriptsuv.exe run --directory D:/1C-Enterprise_Framework/serena serena-mcp-server --help)",
      "mcp__ripgrep__advanced-search",
      "mcp__ripgrep__list-file-types",
      "mcp__ripgrep__count-matches",
      "mcp__brave-search__brave_local_search",
      "mcp__filesystem__move_file",
      "Bash(del:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(git pull:*)",
      "WebFetch(domain:v8std.ru)",
      "Bash(cd:*)",
      "WebFetch(domain:support.claude.com)",
      "WebFetch(domain:claude.ai)",
      "Bash(git init:*)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=24 --output=test-output --no-validate)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --help)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=24 --output-dir=test-output --no-validate)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 DEBUG=1 node bin/task-master.js generate-test --id=24 --output-dir=test-output --no-validate)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=24 --output-dir=test-output --no-validate --overwrite)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=1 --output-dir=test-output --no-validate)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --ids=2,3 --output-dir=test-output --no-validate --continue-on-error)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=5 --output-dir=test-output --no-validate --overwrite)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 npx task-master list --json --status=pending)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 npx task-master show 24)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=1 --output-dir=test-output --no-validate --research)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --ids=2,3 --output-dir=test-output --no-validate --continue-on-error --research)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 node bin/task-master.js generate-test --id=24.1 --output-dir=test-output --no-validate --research)",
      "Bash(TASK_MASTER_NO_UPDATE_CHECK=1 npx task-master list --status=done --json)",
      "Read(//c/Program Files (x86)/**)",
      "Read(//c/Program Files (x86)/1cv8/**)",
      "Read(//c/Program Files (x86)/1cv8/8.3.26.1521/bin/**)",
      "Bash(regsvr32:*)",
      "Bash(start:*)",
      "Bash(\"C:/Program Files (x86)/1cv8/8.3.26.1521/bin/1cv8.exe\" DESIGNER /File=\"D:\\DB1C\\251017_GKSTCPLK-1794\" /N\"a.terletskiy@sodrugestvo.ru\" /P\"1234\")",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\1cv8.exe\" DESIGNER /F\"D:\\DB1C\\251017_GKSTCPLK-1794\" /Na.terletskiy@sodrugestvo.ru /P1234 /ExecuteD:1C-Enterprise_Frameworkscriptsbslget-users-info.bsl /DisableStartupDialogs)",
      "WebFetch(domain:www.dalni.ru)",
      "WebFetch(domain:kuharbogdan.com)",
      "WebFetch(domain:habr.com)",
      "Bash(scripts/bsl-quick-check.bat \"scripts/final-working-solution.py\")",
      "WebFetch(domain:open-budget.ru)",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\webinst.exe\" -list)",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\webinst.exe\" -publish -wsdir \"C:\\inetpub\\wwwroot\\251017_GKSTCPLK-1794\" -dir \"D:\\DB1C\\251017_GKSTCPLK-1794\" -connstr \"File=\"\"D:\\DB1C\\251017_GKSTCPLK-1794\"\";\" -confurl \"http://localhost/251017_GKSTCPLK-1794\")",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\webinst.exe\" -publish -wsdir \"C:\\inetpub\\wwwroot\\251017_GKSTCPLK-1794\" -dir \"D:\\DB1C\\251017_GKSTCPLK-1794\")",
      "Read(//c/Program Files (x86)/Apache Software Foundation/Apache2.4/conf/**)",
      "Bash(venv/Scripts/pip install:*)",
      "Bash(venv/Scripts/python:*)",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\1cv8.exe\" DESIGNER /F\"D:\\DB1C\\251017_GKSTCPLK-1794\" /N\"a.terletskiy@sodrugestvo.ru\" /P\"1234\" /Execute\"D:\\1C-Enterprise_Framework\\mcp-1c-server\\test_mcp_connection.bsl\" /DisableStartupDialogs)",
      "Bash(net start:*)",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\webinst.exe\" -help)",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\webinst.exe\")",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\webinst.exe\" -publish -apache24 -wsdir \"C:\\inetpub\\wwwroot\\251017_GKSTCPLK-1794\" -dir \"D:\\DB1C\\251017_GKSTCPLK-1794\" -connstr \"File=\"\"D:\\DB1C\\251017_GKSTCPLK-1794\"\";\")",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\1cv8.exe\" DESIGNER /F\"D:\\DB1C\\251017_GKSTCPLK-1794\" /N\"a.terletskiy@sodrugestvo.ru\" /P\"1234\" /Execute\"D:\\1C-Enterprise_Framework\\scripts\\check-extensions.bsl\" /DisableStartupDialogs)",
      "Bash(\"C:\\Program Files (x86)\\1cv8\\8.3.26.1521\\bin\\1cv8.exe\" DESIGNER /F\"D:\\DB1C\\251017_GKSTCPLK-1794\" /N\"a.terletskiy@sodrugestvo.ru\" /P\"1234\" /Execute\"D:\\1C-Enterprise_Framework\\scripts\\simple-1c-check.bsl\" /DisableStartupDialogs /Out\"D:\\1C-Enterprise_Framework\\cache\\1c-check-result.log\")",
      "Bash(start_mcp_server.bat)",
      "Bash(D:1C-Enterprise_Frameworkmcp-1c-serverstart_mcp_server.bat)",
      "Bash(\"D:\\1C-Enterprise_Framework\\mcp-1c-server\\venv\\Scripts\\python.exe\" -m py_server http --port 8000)",
      "Bash(set MCP_ONEC_URL=http://localhost/251017_GKSTCPLK-1794)",
      "Bash(set MCP_ONEC_USERNAME=a.terletskiy@sodrugestvo.ru)",
      "Bash(set MCP_ONEC_PASSWORD=1234)",
      "Bash(D:1C-Enterprise_Frameworkmcp-1c-servervenvScriptspython.exe --version)",
      "Bash(\"D:\\1C-Enterprise_Framework\\mcp-1c-server\\venv\\Scripts\\python.exe\" --version)",
      "Bash(\"venv\\Scripts\\pip.exe\" install:*)",
      "Bash(\"venv\\Scripts\\python.exe\" -m py_server stdio --help)",
      "Bash(\"venv\\Scripts\\python.exe\" -m py_server stdio)",
      "Bash(set MCP_ONEC_SERVICE_ROOT=mcp)",
      "Bash(\"venv\\Scripts\\python.exe\" --version)",
      "Bash(\"venv\\Scripts\\python.exe\":*)",
      "mcp__1c-enterprise-database__list_metadata_objects",
      "mcp__1c-enterprise-database__get_metadata_structure",
      "WebFetch(domain:gitlab.sodru.com)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "Bash(scripts/mcp-integration/dns-troubleshooting.bat)",
      "WebFetch(domain:context7.ai)",
      "Bash(taskkill:*)",
      "Bash(git rm:*)",
      "Bash(set DOCLING_PYTHON_PATH=python)",
      "Bash(set DOCLING_SCRIPT_PATH=D:/1C-Enterprise_Framework/scripts/mcp-integration/docling-simple.py)",
      "Bash(set DOCLING_OUTPUT_DIR=D:/1C-Enterprise_Framework/cache/docling-output)",
      "Bash(set DOCLING_TEMP_DIR=D:/1C-Enterprise_Framework/cache/docling-temp)",
      "mcp__universal-web-scraper__analyze_website_structure",
      "mcp__universal-web-scraper__get_supported_adapters",
      "mcp__universal-web-scraper__scrape_website",
      "mcp__universal-web-scraper__bulk_scrape_websites",
      "mcp__1c-docs__list_1c_doc_categories",
      "mcp__1c-docs__search_1c_docs",
      "mcp__docling__convert_document",
      "mcp__docling__get_conversion_status",
      "mcp__docling__analyze_document_structure",
      "mcp__playwright-automation__playwright_save_as_pdf",
      "WebFetch(domain:support.deepl.com)",
      "WebFetch(domain:developers.deepl.com)",
      "WebFetch(domain:www.deepl.com)",
      "mcp__deepl__translate-text",
      "Bash(tree:*)",
      "Bash(for file in cursor-rules/00a-technical-programming-skills.md cursor-rules/00b-system-integration-skills.md cursor-rules/00c-expert-knowledge.md cursor-rules/00d-organizational-process-knowledge.md cursor-rules/01-answer-structure.md cursor-rules/12-workflow-integration.md cursor-rules/13-mcp-task-classifier.md cursor-rules/14-mcp-selector.md cursor-rules/15-mcp-selection-config.md cursor-rules/16-task-master-json-integration.md cursor-rules/17-mcp-reasoner-integration.md cursor-rules/18-enhanced-search-rules-mcp.md cursor-rules/19-comprehensive-information-study.md cursor-rules/README-CHANGES-2025-09-27.md cursor-rules/README-CHANGES.md cursor-rules/README-WORKFLOW-INTEGRATION.md)",
      "Bash(do if [ ! -f \"$file\" ])",
      "Bash(then echo \"MISSING: $file\")",
      "Bash(done)",
      "Bash(for file in scripts/mcp-integration/dynamic-context-engine.py scripts/mcp-integration/dynamic-context-integration.py scripts/mcp-integration/quick-context-analyze-fixed.py scripts/mcp-integration/quick-context-analyze.py)",
      "Bash(git ls-tree:*)",
      "Bash(git log:*)",
      "Bash(.venv/Scripts/pip:*)",
      "Bash(C:/Users/AlexT/AppData/Local/Programs/Python/Python313/python.exe -m pip:*)",
      "Bash(.venv/Scripts/python.exe:*)",
      "Bash(.venv/Scripts/pip.exe list)",
      "Bash(PYTHONPATH=\"D:/1C-Enterprise_Framework/scripts/docs-mcp\" PYTHONIOENCODING=utf-8 DOCS_ROOT=\"D:/1C-Enterprise_Framework/Документация по фреймворку\" python:*)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" mcp_server.py)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m py_server --help)",
      "Bash(if [ -d .venv/Scripts ])",
      "Bash(then .venv/Scripts/pip list)",
      "Bash(else echo \"Virtual environment not properly set up\")",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m pip list)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m py_server stdio)",
      "Bash(MCP_ONEC_URL=\"http://localhost/251017_GKSTCPLK-1794\" MCP_ONEC_USERNAME=\"a.terletskiy@sodrugestvo.ru\" MCP_ONEC_PASSWORD=\"1234\" MCP_ONEC_SERVICE_ROOT=\"mcp\" MCP_LOG_LEVEL=\"INFO\" PYTHONPATH=\"D:/1C-Enterprise_Framework/mcp-1c-integration/src\" \"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m py_server stdio --help)",
      "Bash(set PYTHONPATH=D:/1C-Enterprise_Framework/mcp-1c-integration/src:*)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -m py_server stdio --help)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" server_enhanced.py --help)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" mcp_server.py --help)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" test_startup.py)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"import sys; sys.path.insert(0, ''D:/1C-Enterprise_Framework/mcp-1c-integration/src''); import py_server; print(''py_server OK'')\")",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"import sys; sys.path.insert(0, ''D:/1C-Enterprise_Framework/mcp-docling-server''); import mcp.server.stdio; print(''MCP OK''); import docling_core; print(''docling_core OK'')\")",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"import sys; sys.path.insert(0, ''D:/1C-Enterprise_Framework/scripts/docs-mcp''); from mcp.server.stdio import stdio_server; print(''MCP OK''); from hybrid_search_engine import HybridSearchEngine; print(''HybridSearchEngine OK'')\")",
      "Bash(PYTHONIOENCODING=utf-8 \"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\":*)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" --version)",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"import py_server; print(''py_server: OK'')\")",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"import mcp; print(''mcp: OK''); import docling_core; print(''docling_core: OK'')\")",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" -c \"from mcp.server.stdio import stdio_server; print(''MCP stdio: OK''); from hybrid_search_engine import HybridSearchEngine; print(''HybridSearchEngine: OK'')\")",
      "Bash(\"C:\\Users\\AlexT\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\" server_enhanced.py --transport stdio)"
    ],
    "deny": [],
    "ask": []
  }
}
